<div class="col-18">
  <div id="watched-exceptions-recordset">
    <%= render :partial => "recordset", :locals => {:watched_exceptions => @watched_exceptions} %>
  </div>
</div>
<div class="col-6 col-last">
  <h4>Search</h4>
  <% form_for :watched_exception, :url => watchtower_index_path, :html => {:id => "watchtower-search", :method => :get, :class => "group no-margin"} do |form| %>
    <div class="text col-4">
      <%= form.text_field :query, :class => "col-4" %>
    </div>
    <div class="col-2 col-last right">
      <%= form.submit "Search" %>
    </div>
  <% end %>
  <h4>Filter by Exception</h4>
  <ul class="filter-exception_class">
    <% WatchedException.exception_classes.each do |exception_class| %>
      <li><%= link_to exception_class, watchtower_index_path(:exception_class => exception_class) %></li>
    <% end %>
  </ul>
  <h4>Filter by Controller and Action</h4>
  <ul class="filter-controller_action">
    <% WatchedException.controller_actions.each do |controller_action| %>
      <li><%= link_to controller_action, watchtower_index_path(:controller_action => controller_action) %></li>
    <% end %>
  </ul>
</div>
<% content_for :footer do %>
  <script type="text/javascript">
    (function($) {
      var watchtower = $.watchtower({recordset: $("#watched-exceptions-recordset")});
      
      $("ul[class^=filter-] li a").each(function(idx, a) {
        var $a     = $(a),
            filter  = $a.parent().parent().attr("class").replace("filter-", ""),
            name    = $a.text();
        
        $a.click(function(e) {
          var item = $(this).parent();
          if(item.hasClass("active-filter")) {
            watchtower.filters(filter).clear(function() {
              item.removeClass("active-filter");
            });
          } else {
            watchtower.filters(filter).set(name, function() {
              item.siblings().removeClass("active-filter");
              item.addClass("active-filter");
            });
          }
          e.preventDefault();
          return false;
        });
      });
      
      $(".pagination a").live("click", function(evt) {
        var anchor = $(this);
        watchtower.filters("page").set(anchor.attr("href").match(/page\=(\d+)/)[1], function() {});
        evt.preventDefault();
        return false;
      });
      
      $("#watchtower-search").submit(function(e) {
        var $form = $(this);
        watchtower.filters("query").set($("input[type=text]", $form).val(), function() {});
        e.preventDefault();
        return false;
      });
      
      $(document).keydown(function(e) {
        if (/(input|textarea|select)/i.test(e.target.nodeName)) { return; }

        if(e.which == "37") { /* left */
          e.preventDefault();
          $(".pagination a[rel*=prev]:first").trigger("click");
        } else if(e.which == "39") { /* right */
          e.preventDefault();
          $(".pagination a[rel*=next]:first").trigger("click");
        }
      });
    })(jQuery);
  </script>
<% end %>